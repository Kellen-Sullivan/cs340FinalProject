<h1>Events</h1>

{{!-- 
Citation for the following creating this table and populating using handlebars
Date: 2/26/2025
Adapted from nodejs-starter app code
Source URL: https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%204%20-%20Dynamically%20Displaying%20Data--}}

{{!-- Display current Events data --}}
{{!-- Create a table --}}
<table id="event-table"border="1", cellpadding="5">

    {{!-- Header section --}}
    <thead>

        {{!-- For just the first row, we print each key of the row object as a header cell so we
        know what each column means when the page renders --}}
        <tr>
            {{#each data.[0]}}
            <th>
                {{@key}}
            </th>
            {{/each}}
            <th>Delete</th>
            <th>Update</th>
        </tr>
    </thead>

    {{!-- Body section --}}
    <tbody>

        {{!-- For each row, print all of the attributes in order --}}
        {{#each data}}
        <tr data-value="{{this.eventId}}">
            <td>{{this.eventId}}</td>
            <td>{{this.clubId}}</td>
            <td>{{this.eventName}}</td>
            <td>{{this.eventDateTime}}</td>
            <td>{{this.eventDescription}}</td>
            <td>{{this.eventLocation}}</td>
            <td><button onclick="deleteEvent({{this.eventId}})">Delete</button></td>
            <td><button onclick="updateEvent({{this.eventId}})">Update</button></td>
        </tr>
        {{/each}}
    </tbody>
</table>

{{!-- Button to open add add event Modal--}}
<button id="add-event-button">Add Event</button>

<div id="add-modal-backdrop" class="hidden"></div>
    <div id="add-event-modal" class="hidden">
        <div class="modal-dialog">
            <div class="modal-header">
                <h3>Add Event</h3>
                <button type="button" id="add-modal-close" class="modal-hide-button">&times;</button>
            </div>
            <div class="modal-body">
                {{!-- 
                Citation for following code that allows the user to add a new row to a table using AJAX
                Date: 2/26/2025
                Adapted from nodejs-starter app code
                Source URL: https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%205%20-%20Adding%20New%20Data--}}
                {{!-- Form to add a record to the table--}} 
                    <form id="add-event-form-ajax">
                        <div class="form-group">
                            <label for="input-eventName">Name</label>
                            <input type="text" id="input-eventName" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="input-eventDescription">Description</label>
                            <input type="text" id="input-eventDescription">
                        </div>
                        
                        <div class="form-group">
                            <label for="input-eventDateTime">Date/Time</label>
                            <input type="datetime-local" id="input-eventDateTime" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="input-eventLocation">Location</label>
                            <input type="text" id="input-eventLocation" required>
                        </div>
                        
                        <div class="form-group">
                            <select name="input-clubId" id="input-clubId">
                            <option value="">Select a Club</option>
                                {{#each clubs}}
                                <option value="{{this.clubId}}">{{this.clubName}}</option>
                                {{/each}}
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <input type="submit">
                        </div>
                    </form>
            </div>
    </div>
</div>

<div id="update-modal-backdrop" class="hidden"></div>
    <div id="update-event-modal" class="hidden">
        <div class="modal-dialog">
            <div class="modal-header">
                <h3>Update Event</h3>
                <button type="button" id="update-modal-close" class="modal-hide-button">&times;</button>
            </div>
            <div class="modal-body">
                {{!-- 
                Citation for following code that allows the user to add a new row to a table using AJAX
                Date: 2/26/2025
                Adapted from nodejs-starter app code
                Source URL: https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%205%20-%20Adding%20New%20Data--}}
                {{!-- Form to add a record to the table--}} 
                <form id="update-event-form-ajax">
                    <div class="form-group">
                        <label for="update-input-eventName">Name</label>
                        <input type="text" id="update-input-eventName" required>
                    </div>
                        
                    <div class="form-group">
                        <label for="update-input-eventDescription">Description</label>
                        <input type="text" id="update-input-eventDescription">
                    </div>
                        
                    <div class="form-group">
                        <label for="update-input-eventDateTime">Date/Time</label>
                        <input type="datetime-local" id="update-input-eventDateTime" required>
                    </div>
                        
                    <div class="form-group">
                        <label for="update-input-eventLocation">Location</label>
                        <input type="text" id="update-input-eventLocation" required>
                    </div>
                        
                    <div class="form-group">
                        <select name="update-input-clubId" id="update-input-clubId">
                        <option value="">Select a Club</option>
                            {{#each clubs}}
                            <option value="{{this.clubId}}">{{this.clubName}}</option>
                            {{/each}}
                        </select>
                    </div>
                        
                    <div class="form-group">
                        <input type="submit">
                    </div> 
                </form> 
            </div>
    </div>
</div>

{{!-- 
Citation for the following search feature
Date: 2/27/2025
Adapted from nodejs-starter app code
Source URL: https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%206%20-%20Dynamically%20Filling%20Dropdowns%20and%20Adding%20a%20Search%20Box--}}
<h2>Search Events</h2>
<form id="search-event-by-name-html" method='GET' action='/Events' style="display: flex; align-items: center; gap: 10px;"> <!-- MAY WANT TO CHANGE THE ROUTE FROM / TO SOMETHING ELSE-->
    <select name="eventSearchChoice" id="eventSearchChoice">
        <option value="none">Select</option>
        <option value="eventName">Event Name</option>
        <option value="eventLocation">Event Location</option>
        <option value="eventDate">Event Date</option>
    </select>
    
    <input type="text" name="searchTerm" id="searchText">

    <input type="date" name="searchDate" id="searchDate" style="display: none;">
    
    <input type="submit">
    <a href='/Events'><button type="button">Reset</button></a>
</form>

<script>
    
document.addEventListener("DOMContentLoaded", function() { 
    function toggleSearchFields() {
        let searchChoice = document.getElementById("eventSearchChoice").value;
        let textInput = document.getElementById("searchText");
        let dateInput = document.getElementById("searchDate");

        if (searchChoice === "eventDate") {
            textInput.style.display = "none";  // Hide text input
            dateInput.style.display = "block"; // Show date input
        } else if (searchChoice === "eventName" || searchChoice === "eventLocation") {
            textInput.style.display = "block"; // Show text input
            dateInput.style.display = "none";  // Hide date input
        } else {
            textInput.style.display = "none";  // Hide both if "Select" is chosen
            dateInput.style.display = "none";
        }
    }

    // Ensure the function runs after the DOM is fully loaded
    document.getElementById("eventSearchChoice").addEventListener("change", toggleSearchFields);
});
</script>

{{!-- Embed our javascript to handle the DOM manipulation and AJAX request --}}
<script src="./js/update_event.js"></script>
<script src="./js/add_event.js"></script>
<script src="./js/delete_event.js"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script> <!-- Allow use of jQuery-->